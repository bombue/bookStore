services:
  # PostgreSQL
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: bookStore
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: spring
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # Модуль application
  application:
    build:
      context: .
      dockerfile: application/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookStore
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: spring
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # Модуль email-sender
  email-sender:
    build:
      context: .
      dockerfile: email-sender/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookStore
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: spring
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

# Тома для данных PostgreSQL
volumes:
  postgres_data: